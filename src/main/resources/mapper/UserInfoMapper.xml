<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.obsidian.ceimp.dao.UserInfoMapper">
  <resultMap id="BaseResultMap" type="org.obsidian.ceimp.entity.UserInfo">
    <id column="info_id" jdbcType="BIGINT" property="infoId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="year_scope" jdbcType="INTEGER" property="yearScope" />
    <result column="class_num_id" jdbcType="BIGINT" property="classNumId" />
    <result column="political" jdbcType="VARCHAR" property="political" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="job" jdbcType="VARCHAR" property="job" />
    <result column="charact" jdbcType="VARCHAR" property="charact" />
    <result column="study" jdbcType="VARCHAR" property="study" />
    <result column="ability" jdbcType="VARCHAR" property="ability" />
    <result column="total" jdbcType="VARCHAR" property="total" />
    <result column="gp_rank" jdbcType="VARCHAR" property="gpRank" />
    <result column="ce_rank" jdbcType="VARCHAR" property="ceRank" />
    <result column="pass_sum" jdbcType="VARCHAR" property="passSum" />
    <result column="class_sum" jdbcType="VARCHAR" property="classSum" />
    <result column="major_sum" jdbcType="VARCHAR" property="majorSum" />
  </resultMap>
  <select id="getExcelUserBeanList" parameterType="map" resultType="org.obsidian.ceimp.bean.ExcelUserBean">
    select major.name majorName,major.grade grade,class_num.num classNum,
    user_basic.account account,user_basic.username username,user_basic.sex sex,user_basic.entrance entrance,
    user_info.charact charact,user_info.study study,user_info.ability ability,user_info.total total,
    user_info.ce_rank ceRank,user_info.gp_rank gpRank,user_info.major_sum majorSum
    from major,class_num,user_basic,user_info
    where major.school_id = #{schoolId} and major.major_id = class_num.major_id and
    class_num.class_num_id = user_info.class_num_id and user_info.user_id = user_basic.user_id
    and user_info.year_scope = #{yearScope};
  </select>
  <insert id="insertExcelUserBeanList" parameterType="map">
    insert into user_info(user_id,year_scope,class_num_id,charact,study,ability,total,gp_rank,ce_rank,major_sum)
    <foreach collection ="list" item="bean" index= "index" separator ="union">
      select user_basic.user_id user_id,#{yearScope} year_scope,class_num.class_num_id class_num_id,
      #{bean.charact} charact,#{bean.study} study,#{bean.ability} ability,#{bean.total} total,#{bean.gpRank} gp_rank,
      #{bean.ceRank} ce_rank,#{bean.majorSum} major_sum from major,class_num,user_basic
      where major.school_id = #{schoolId} and major.name = #{bean.majorName} and major.grade = #{bean.grade} and
      major.major_id = class_num.major_id and class_num.num = #{bean.classNum} and user_basic.account = #{bean.account}
    </foreach>;
  </insert>
  <update id="updateExcelUserBeanList" parameterType="map">
    update user_info,user_basic set
    user_info.charact = case user_basic.account
    <foreach collection ="list" item="bean" index= "index" separator =" ">
      when #{bean.account} then #{bean.charact}
    </foreach>
    end,
    user_info.study = case user_basic.account
    <foreach collection ="list" item="bean" index= "index" separator =" ">
      when #{bean.account} then #{bean.study}
    </foreach>
    end,
    user_info.ability = case user_basic.account
    <foreach collection ="list" item="bean" index= "index" separator =" ">
      when #{bean.account} then #{bean.ability}
    </foreach>
    end,
    user_info.total = case user_basic.account
    <foreach collection ="list" item="bean" index= "index" separator =" ">
      when #{bean.account} then #{bean.total}
    </foreach>
    end,
    user_info.gp_rank = case user_basic.account
    <foreach collection ="list" item="bean" index= "index" separator =" ">
      when #{bean.account} then #{bean.gpRank}
    </foreach>
    end,
    user_info.ce_rank = case user_basic.account
    <foreach collection ="list" item="bean" index= "index" separator =" ">
      when #{bean.account} then #{bean.ceRank}
    </foreach>
    end,
    user_info.major_sum = case user_basic.account
    <foreach collection ="list" item="bean" index= "index" separator =" ">
      when #{bean.account} then #{bean.majorSum}
    </foreach>
    end,
    user_info.class_num_id = case user_basic.account
    <foreach collection ="list" item="bean" index= "index" separator =" ">
      when #{bean.account} then
      (select class_num.class_num_id class_num_id
      from major,class_num
      where major.school_id = #{schoolId} and major.name = #{bean.majorName} and major.grade = #{bean.grade} and
      major.major_id = class_num.major_id and class_num.num = #{bean.classNum})
    </foreach>
    end
    where user_info.year_scope = #{yearScope} and user_basic.user_id = user_info.user_id and user_basic.account in
    <foreach collection="list" index="index" item="bean" open="(" separator="," close=")">
      #{bean.account}
    </foreach>;
  </update>
  <update id="update" parameterType="map">
    update user_info set political=#{bean.political},phone=#{bean.phone},job=#{bean.job},charact=#{bean.charact},
    study=#{bean.study},ability=#{bean.ability},total=#{bean.total},gp_rank=#{bean.gpRank},ce_rank=#{bean.ceRank},
    pass_sum=#{bean.passSum},class_sum=#{bean.classSum},major_sum=#{bean.majorSum}
    where user_id=#{userId} and year_scope=#{yearScope};
  </update>
  <select id="getBean" parameterType="map" resultType="org.obsidian.ceimp.bean.UserInfoBean">
    select school.name school,major.name major,class_num.num classNum,user_info.political political,
    user_info.phone phone,user_info.job job,user_info.charact charact,user_info.study study,
    user_info.ability ability,user_info.total total,user_info.gp_rank gpRank,user_info.ce_rank ceRank,
    user_info.pass_sum passSum,user_info.class_sum classSum,user_info.major_sum majorSum
    from user_info,school,major,class_num where school.school_id = major.school_id and
    major.major_id = class_num.major_id and class_num.class_num_id = user_info.class_num_id and
    user_info.user_id = #{userId} and user_info.year_scope = #{yearScope}
  </select>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    info_id, user_id, year_scope, class_num_id, political, phone, job, charact, study, 
    ability, total, gp_rank, ce_rank, pass_sum, class_sum, major_sum
  </sql>
  <select id="selectByExample" parameterType="org.obsidian.ceimp.entity.UserInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from user_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_info
    where info_id = #{infoId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user_info
    where info_id = #{infoId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="org.obsidian.ceimp.entity.UserInfoExample">
    delete from user_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.obsidian.ceimp.entity.UserInfo">
    insert into user_info (info_id, user_id, year_scope, 
      class_num_id, political, phone, 
      job, charact, study, 
      ability, total, gp_rank, 
      ce_rank, pass_sum, class_sum, 
      major_sum)
    values (#{infoId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{yearScope,jdbcType=INTEGER}, 
      #{classNumId,jdbcType=BIGINT}, #{political,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{job,jdbcType=VARCHAR}, #{charact,jdbcType=VARCHAR}, #{study,jdbcType=VARCHAR}, 
      #{ability,jdbcType=VARCHAR}, #{total,jdbcType=VARCHAR}, #{gpRank,jdbcType=VARCHAR}, 
      #{ceRank,jdbcType=VARCHAR}, #{passSum,jdbcType=VARCHAR}, #{classSum,jdbcType=VARCHAR}, 
      #{majorSum,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.obsidian.ceimp.entity.UserInfo">
    insert into user_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="infoId != null">
        info_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="yearScope != null">
        year_scope,
      </if>
      <if test="classNumId != null">
        class_num_id,
      </if>
      <if test="political != null">
        political,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="job != null">
        job,
      </if>
      <if test="charact != null">
        charact,
      </if>
      <if test="study != null">
        study,
      </if>
      <if test="ability != null">
        ability,
      </if>
      <if test="total != null">
        total,
      </if>
      <if test="gpRank != null">
        gp_rank,
      </if>
      <if test="ceRank != null">
        ce_rank,
      </if>
      <if test="passSum != null">
        pass_sum,
      </if>
      <if test="classSum != null">
        class_sum,
      </if>
      <if test="majorSum != null">
        major_sum,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="infoId != null">
        #{infoId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="yearScope != null">
        #{yearScope,jdbcType=INTEGER},
      </if>
      <if test="classNumId != null">
        #{classNumId,jdbcType=BIGINT},
      </if>
      <if test="political != null">
        #{political,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="job != null">
        #{job,jdbcType=VARCHAR},
      </if>
      <if test="charact != null">
        #{charact,jdbcType=VARCHAR},
      </if>
      <if test="study != null">
        #{study,jdbcType=VARCHAR},
      </if>
      <if test="ability != null">
        #{ability,jdbcType=VARCHAR},
      </if>
      <if test="total != null">
        #{total,jdbcType=VARCHAR},
      </if>
      <if test="gpRank != null">
        #{gpRank,jdbcType=VARCHAR},
      </if>
      <if test="ceRank != null">
        #{ceRank,jdbcType=VARCHAR},
      </if>
      <if test="passSum != null">
        #{passSum,jdbcType=VARCHAR},
      </if>
      <if test="classSum != null">
        #{classSum,jdbcType=VARCHAR},
      </if>
      <if test="majorSum != null">
        #{majorSum,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.obsidian.ceimp.entity.UserInfoExample" resultType="java.lang.Long">
    select count(*) from user_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user_info
    <set>
      <if test="record.infoId != null">
        info_id = #{record.infoId,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.yearScope != null">
        year_scope = #{record.yearScope,jdbcType=INTEGER},
      </if>
      <if test="record.classNumId != null">
        class_num_id = #{record.classNumId,jdbcType=BIGINT},
      </if>
      <if test="record.political != null">
        political = #{record.political,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.job != null">
        job = #{record.job,jdbcType=VARCHAR},
      </if>
      <if test="record.charact != null">
        charact = #{record.charact,jdbcType=VARCHAR},
      </if>
      <if test="record.study != null">
        study = #{record.study,jdbcType=VARCHAR},
      </if>
      <if test="record.ability != null">
        ability = #{record.ability,jdbcType=VARCHAR},
      </if>
      <if test="record.total != null">
        total = #{record.total,jdbcType=VARCHAR},
      </if>
      <if test="record.gpRank != null">
        gp_rank = #{record.gpRank,jdbcType=VARCHAR},
      </if>
      <if test="record.ceRank != null">
        ce_rank = #{record.ceRank,jdbcType=VARCHAR},
      </if>
      <if test="record.passSum != null">
        pass_sum = #{record.passSum,jdbcType=VARCHAR},
      </if>
      <if test="record.classSum != null">
        class_sum = #{record.classSum,jdbcType=VARCHAR},
      </if>
      <if test="record.majorSum != null">
        major_sum = #{record.majorSum,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user_info
    set info_id = #{record.infoId,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      year_scope = #{record.yearScope,jdbcType=INTEGER},
      class_num_id = #{record.classNumId,jdbcType=BIGINT},
      political = #{record.political,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      job = #{record.job,jdbcType=VARCHAR},
      charact = #{record.charact,jdbcType=VARCHAR},
      study = #{record.study,jdbcType=VARCHAR},
      ability = #{record.ability,jdbcType=VARCHAR},
      total = #{record.total,jdbcType=VARCHAR},
      gp_rank = #{record.gpRank,jdbcType=VARCHAR},
      ce_rank = #{record.ceRank,jdbcType=VARCHAR},
      pass_sum = #{record.passSum,jdbcType=VARCHAR},
      class_sum = #{record.classSum,jdbcType=VARCHAR},
      major_sum = #{record.majorSum,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.obsidian.ceimp.entity.UserInfo">
    update user_info
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="yearScope != null">
        year_scope = #{yearScope,jdbcType=INTEGER},
      </if>
      <if test="classNumId != null">
        class_num_id = #{classNumId,jdbcType=BIGINT},
      </if>
      <if test="political != null">
        political = #{political,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="job != null">
        job = #{job,jdbcType=VARCHAR},
      </if>
      <if test="charact != null">
        charact = #{charact,jdbcType=VARCHAR},
      </if>
      <if test="study != null">
        study = #{study,jdbcType=VARCHAR},
      </if>
      <if test="ability != null">
        ability = #{ability,jdbcType=VARCHAR},
      </if>
      <if test="total != null">
        total = #{total,jdbcType=VARCHAR},
      </if>
      <if test="gpRank != null">
        gp_rank = #{gpRank,jdbcType=VARCHAR},
      </if>
      <if test="ceRank != null">
        ce_rank = #{ceRank,jdbcType=VARCHAR},
      </if>
      <if test="passSum != null">
        pass_sum = #{passSum,jdbcType=VARCHAR},
      </if>
      <if test="classSum != null">
        class_sum = #{classSum,jdbcType=VARCHAR},
      </if>
      <if test="majorSum != null">
        major_sum = #{majorSum,jdbcType=VARCHAR},
      </if>
    </set>
    where info_id = #{infoId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.obsidian.ceimp.entity.UserInfo">
    update user_info
    set user_id = #{userId,jdbcType=BIGINT},
      year_scope = #{yearScope,jdbcType=INTEGER},
      class_num_id = #{classNumId,jdbcType=BIGINT},
      political = #{political,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      job = #{job,jdbcType=VARCHAR},
      charact = #{charact,jdbcType=VARCHAR},
      study = #{study,jdbcType=VARCHAR},
      ability = #{ability,jdbcType=VARCHAR},
      total = #{total,jdbcType=VARCHAR},
      gp_rank = #{gpRank,jdbcType=VARCHAR},
      ce_rank = #{ceRank,jdbcType=VARCHAR},
      pass_sum = #{passSum,jdbcType=VARCHAR},
      class_sum = #{classSum,jdbcType=VARCHAR},
      major_sum = #{majorSum,jdbcType=VARCHAR}
    where info_id = #{infoId,jdbcType=BIGINT}
  </update>
</mapper>