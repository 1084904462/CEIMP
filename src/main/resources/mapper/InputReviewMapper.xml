<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.obsidian.ceimp.dao.InputReviewMapper">
  <resultMap id="BaseResultMap" type="org.obsidian.ceimp.entity.InputReview">
    <result column="review_id" jdbcType="INTEGER" property="reviewId" />
    <result column="input_id" jdbcType="INTEGER" property="inputId" />
    <result column="input_type" jdbcType="INTEGER" property="inputType" />
    <result column="review_status" jdbcType="INTEGER" property="reviewStatus" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    review_id, input_id, input_type, review_status, create_time
  </sql>
  <select id="selectByExample" parameterType="org.obsidian.ceimp.entity.InputReviewExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from input_review
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="org.obsidian.ceimp.entity.InputReviewExample">
    delete from input_review
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.obsidian.ceimp.entity.InputReview">
    insert into input_review (review_id, input_id, input_type, 
      review_status, create_time)
    values (#{reviewId,jdbcType=INTEGER}, #{inputId,jdbcType=INTEGER}, #{inputType,jdbcType=INTEGER}, 
      #{reviewStatus,jdbcType=INTEGER}, #{createTime,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="org.obsidian.ceimp.entity.InputReview">
    insert into input_review
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="reviewId != null">
        review_id,
      </if>
      <if test="inputId != null">
        input_id,
      </if>
      <if test="inputType != null">
        input_type,
      </if>
      <if test="reviewStatus != null">
        review_status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="reviewId != null">
        #{reviewId,jdbcType=INTEGER},
      </if>
      <if test="inputId != null">
        #{inputId,jdbcType=INTEGER},
      </if>
      <if test="inputType != null">
        #{inputType,jdbcType=INTEGER},
      </if>
      <if test="reviewStatus != null">
        #{reviewStatus,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.obsidian.ceimp.entity.InputReviewExample" resultType="java.lang.Long">
    select count(*) from input_review
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update input_review
    <set>
      <if test="record.reviewId != null">
        review_id = #{record.reviewId,jdbcType=INTEGER},
      </if>
      <if test="record.inputId != null">
        input_id = #{record.inputId,jdbcType=INTEGER},
      </if>
      <if test="record.inputType != null">
        input_type = #{record.inputType,jdbcType=INTEGER},
      </if>
      <if test="record.reviewStatus != null">
        review_status = #{record.reviewStatus,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update input_review
    set review_id = #{record.reviewId,jdbcType=INTEGER},
      input_id = #{record.inputId,jdbcType=INTEGER},
      input_type = #{record.inputType,jdbcType=INTEGER},
      review_status = #{record.reviewStatus,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>