<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.obsidian.ceimp.dao.EvaluationPointMapper">
  <resultMap id="BaseResultMap" type="org.obsidian.ceimp.entity.EvaluationPoint">
    <result column="point_id" jdbcType="INTEGER" property="pointId" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="score" jdbcType="INTEGER" property="score" />
    <result column="item_id" jdbcType="INTEGER" property="itemId" />
    <result column="calculate_type" jdbcType="INTEGER" property="calculateType" />
    <result column="input_type" jdbcType="INTEGER" property="inputType" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
  </resultMap>
  <select id="selectAllByClassId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select evaluation_point.point_id,evaluation_point.content,evaluation_point.remark,
    evaluation_point.score,evaluation_point.item_id,evaluation_point.calculate_type,
    evaluation_point.input_type,evaluation_point.create_time from evaluation_point,evaluation_item
    where evaluation_point.item_id = evaluation_item.item_id and evaluation_item.class_id = #{classId}
  </select>
  <select id="selectAllByFormId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select evaluation_point.point_id,evaluation_point.content,evaluation_point.remark,
    evaluation_point.score,evaluation_point.item_id,evaluation_point.calculate_type,
    evaluation_point.input_type,evaluation_point.create_time from evaluation_point,evaluation_item,evaluation_class
    where evaluation_point.item_id = evaluation_item.item_id and evaluation_item.class_id = evaluation_class.class_id
    and evaluation_class.form_id = #{formId}
  </select>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    point_id, content, remark, score, item_id, calculate_type, input_type, create_time
  </sql>
  <select id="selectByExample" parameterType="org.obsidian.ceimp.entity.EvaluationPointExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from evaluation_point
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="org.obsidian.ceimp.entity.EvaluationPointExample">
    delete from evaluation_point
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.obsidian.ceimp.entity.EvaluationPoint">
    insert into evaluation_point (point_id, content, remark, 
      score, item_id, calculate_type, 
      input_type, create_time)
    values (#{pointId,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{score,jdbcType=INTEGER}, #{itemId,jdbcType=INTEGER}, #{calculateType,jdbcType=INTEGER}, 
      #{inputType,jdbcType=INTEGER}, #{createTime,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="org.obsidian.ceimp.entity.EvaluationPoint">
    insert into evaluation_point
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="pointId != null">
        point_id,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="itemId != null">
        item_id,
      </if>
      <if test="calculateType != null">
        calculate_type,
      </if>
      <if test="inputType != null">
        input_type,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="pointId != null">
        #{pointId,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
      <if test="itemId != null">
        #{itemId,jdbcType=INTEGER},
      </if>
      <if test="calculateType != null">
        #{calculateType,jdbcType=INTEGER},
      </if>
      <if test="inputType != null">
        #{inputType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.obsidian.ceimp.entity.EvaluationPointExample" resultType="java.lang.Long">
    select count(*) from evaluation_point
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update evaluation_point
    <set>
      <if test="record.pointId != null">
        point_id = #{record.pointId,jdbcType=INTEGER},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.score != null">
        score = #{record.score,jdbcType=INTEGER},
      </if>
      <if test="record.itemId != null">
        item_id = #{record.itemId,jdbcType=INTEGER},
      </if>
      <if test="record.calculateType != null">
        calculate_type = #{record.calculateType,jdbcType=INTEGER},
      </if>
      <if test="record.inputType != null">
        input_type = #{record.inputType,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update evaluation_point
    set point_id = #{record.pointId,jdbcType=INTEGER},
      content = #{record.content,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      score = #{record.score,jdbcType=INTEGER},
      item_id = #{record.itemId,jdbcType=INTEGER},
      calculate_type = #{record.calculateType,jdbcType=INTEGER},
      input_type = #{record.inputType,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>