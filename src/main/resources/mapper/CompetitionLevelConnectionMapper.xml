<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.obsidian.ceimp.dao.CompetitionLevelConnectionMapper">
  <resultMap id="BaseResultMap" type="org.obsidian.ceimp.entity.CompetitionLevelConnection">
    <result column="connection_id" jdbcType="INTEGER" property="connectionId" />
    <result column="competition_id" jdbcType="INTEGER" property="competitionId" />
    <result column="level_id" jdbcType="INTEGER" property="levelId" />
    <result column="competition_type" jdbcType="INTEGER" property="competitionType" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    connection_id, competition_id, level_id, competition_type, create_time
  </sql>
  <select id="selectByExample" parameterType="org.obsidian.ceimp.entity.CompetitionLevelConnectionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from competition_level_connection
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="org.obsidian.ceimp.entity.CompetitionLevelConnectionExample">
    delete from competition_level_connection
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.obsidian.ceimp.entity.CompetitionLevelConnection">
    insert into competition_level_connection (connection_id, competition_id, level_id, 
      competition_type, create_time)
    values (#{connectionId,jdbcType=INTEGER}, #{competitionId,jdbcType=INTEGER}, #{levelId,jdbcType=INTEGER}, 
      #{competitionType,jdbcType=INTEGER}, #{createTime,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="org.obsidian.ceimp.entity.CompetitionLevelConnection">
    insert into competition_level_connection
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="connectionId != null">
        connection_id,
      </if>
      <if test="competitionId != null">
        competition_id,
      </if>
      <if test="levelId != null">
        level_id,
      </if>
      <if test="competitionType != null">
        competition_type,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="connectionId != null">
        #{connectionId,jdbcType=INTEGER},
      </if>
      <if test="competitionId != null">
        #{competitionId,jdbcType=INTEGER},
      </if>
      <if test="levelId != null">
        #{levelId,jdbcType=INTEGER},
      </if>
      <if test="competitionType != null">
        #{competitionType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.obsidian.ceimp.entity.CompetitionLevelConnectionExample" resultType="java.lang.Long">
    select count(*) from competition_level_connection
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update competition_level_connection
    <set>
      <if test="record.connectionId != null">
        connection_id = #{record.connectionId,jdbcType=INTEGER},
      </if>
      <if test="record.competitionId != null">
        competition_id = #{record.competitionId,jdbcType=INTEGER},
      </if>
      <if test="record.levelId != null">
        level_id = #{record.levelId,jdbcType=INTEGER},
      </if>
      <if test="record.competitionType != null">
        competition_type = #{record.competitionType,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update competition_level_connection
    set connection_id = #{record.connectionId,jdbcType=INTEGER},
      competition_id = #{record.competitionId,jdbcType=INTEGER},
      level_id = #{record.levelId,jdbcType=INTEGER},
      competition_type = #{record.competitionType,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>