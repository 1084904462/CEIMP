<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.obsidian.ceimp.dao.UserBasicMapper">
  <resultMap id="BaseResultMap" type="org.obsidian.ceimp.entity.UserBasic">
    <id column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="class_num_id" jdbcType="BIGINT" property="classNumId" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="birth" jdbcType="VARCHAR" property="birth" />
    <result column="nation" jdbcType="VARCHAR" property="nation" />
    <result column="entrance" jdbcType="VARCHAR" property="entrance" />
    <result column="political" jdbcType="VARCHAR" property="political" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="identity" jdbcType="VARCHAR" property="identity" />
    <result column="job" jdbcType="VARCHAR" property="job" />
  </resultMap>
  <select id="getUserSearchBeanBySearchKeyListAndSchoolId" parameterType="map" resultType="org.obsidian.ceimp.bean.UserSearchBean">
    select major.name major,class_num.num classNum,user_basic.account account,user_basic.username username
    from major,class_num,user_basic where major.major_id = class_num.major_id and
    class_num.class_num_id = user_basic.class_num_id and major.school_id = #{schoolId} and
    <foreach collection="searchKeyList" index="index" item="searchKey" open="(" separator="or" close=")">
    user_basic.account like #{searchKey} or user_basic.username like #{searchKey}
    </foreach>
  </select>
  <select id="selectUserBasicBeanByUserId" parameterType="java.lang.Long" resultType="org.obsidian.ceimp.bean.UserBasicBean">
    select school.name school,major.name major,major.sum majorSum,class_num.num classNum,user_basic.username username,user_basic.sex sex,
    user_basic.birth birth,user_basic.account account,user_basic.nation nation,user_basic.entrance entrance,
    user_basic.political political,user_basic.phone phone,user_basic.identity identity,
    user_basic.job job from school,major,class_num,user_basic where school.school_id = major.school_id and
    major.major_id = class_num.major_id and class_num.class_num_id = user_basic.class_num_id and
    user_basic.user_id = #{userId}
  </select>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_id, account, password, username, class_num_id, sex, birth, nation, entrance, 
    political, phone, identity, job
  </sql>
  <select id="selectByExample" parameterType="org.obsidian.ceimp.entity.UserBasicExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from user_basic
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_basic
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
  <select id="selectByAccountAndUsername" parameterType="map" resultType="org.obsidian.ceimp.bean.UserSearchBean">
    select major.name major,class_num.num classNum,user_basic.account account,user_basic.username username
    from user_basic,class_num,major
    where user_basic.account like CONCAT('%',#{account},'%')
    and user_basic.username like CONCAT('%',#{username},'%')
    and user_basic.class_num_id = class_num.class_num_id
    and class_num.major_id = major.major_id
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user_basic
    where user_id = #{userId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="org.obsidian.ceimp.entity.UserBasicExample">
    delete from user_basic
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.obsidian.ceimp.entity.UserBasic">
    insert into user_basic (user_id, account, password, 
      username, class_num_id, sex, 
      birth, nation, entrance, 
      political, phone, identity, 
      job)
    values (#{userId,jdbcType=BIGINT}, #{account,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{classNumId,jdbcType=BIGINT}, #{sex,jdbcType=VARCHAR}, 
      #{birth,jdbcType=VARCHAR}, #{nation,jdbcType=VARCHAR}, #{entrance,jdbcType=VARCHAR}, 
      #{political,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{identity,jdbcType=VARCHAR}, 
      #{job,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.obsidian.ceimp.entity.UserBasic">
    insert into user_basic
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="classNumId != null">
        class_num_id,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="birth != null">
        birth,
      </if>
      <if test="nation != null">
        nation,
      </if>
      <if test="entrance != null">
        entrance,
      </if>
      <if test="political != null">
        political,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="identity != null">
        identity,
      </if>
      <if test="job != null">
        job,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="classNumId != null">
        #{classNumId,jdbcType=BIGINT},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birth != null">
        #{birth,jdbcType=VARCHAR},
      </if>
      <if test="nation != null">
        #{nation,jdbcType=VARCHAR},
      </if>
      <if test="entrance != null">
        #{entrance,jdbcType=VARCHAR},
      </if>
      <if test="political != null">
        #{political,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="identity != null">
        #{identity,jdbcType=VARCHAR},
      </if>
      <if test="job != null">
        #{job,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.obsidian.ceimp.entity.UserBasicExample" resultType="java.lang.Long">
    select count(*) from user_basic
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user_basic
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.classNumId != null">
        class_num_id = #{record.classNumId,jdbcType=BIGINT},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.birth != null">
        birth = #{record.birth,jdbcType=VARCHAR},
      </if>
      <if test="record.nation != null">
        nation = #{record.nation,jdbcType=VARCHAR},
      </if>
      <if test="record.entrance != null">
        entrance = #{record.entrance,jdbcType=VARCHAR},
      </if>
      <if test="record.political != null">
        political = #{record.political,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.identity != null">
        identity = #{record.identity,jdbcType=VARCHAR},
      </if>
      <if test="record.job != null">
        job = #{record.job,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user_basic
    set user_id = #{record.userId,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      class_num_id = #{record.classNumId,jdbcType=BIGINT},
      sex = #{record.sex,jdbcType=VARCHAR},
      birth = #{record.birth,jdbcType=VARCHAR},
      nation = #{record.nation,jdbcType=VARCHAR},
      entrance = #{record.entrance,jdbcType=VARCHAR},
      political = #{record.political,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      identity = #{record.identity,jdbcType=VARCHAR},
      job = #{record.job,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.obsidian.ceimp.entity.UserBasic">
    update user_basic
    <set>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="classNumId != null">
        class_num_id = #{classNumId,jdbcType=BIGINT},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birth != null">
        birth = #{birth,jdbcType=VARCHAR},
      </if>
      <if test="nation != null">
        nation = #{nation,jdbcType=VARCHAR},
      </if>
      <if test="entrance != null">
        entrance = #{entrance,jdbcType=VARCHAR},
      </if>
      <if test="political != null">
        political = #{political,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="identity != null">
        identity = #{identity,jdbcType=VARCHAR},
      </if>
      <if test="job != null">
        job = #{job,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.obsidian.ceimp.entity.UserBasic">
    update user_basic
    set account = #{account,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      class_num_id = #{classNumId,jdbcType=BIGINT},
      sex = #{sex,jdbcType=VARCHAR},
      birth = #{birth,jdbcType=VARCHAR},
      nation = #{nation,jdbcType=VARCHAR},
      entrance = #{entrance,jdbcType=VARCHAR},
      political = #{political,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      identity = #{identity,jdbcType=VARCHAR},
      job = #{job,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
</mapper>