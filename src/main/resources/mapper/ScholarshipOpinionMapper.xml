<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.obsidian.ceimp.dao.ScholarshipOpinionMapper">
  <resultMap id="BaseResultMap" type="org.obsidian.ceimp.entity.ScholarshipOpinion">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="manager_id" jdbcType="VARCHAR" property="managerId" />
    <result column="national_opinion" jdbcType="VARCHAR" property="nationalOpinion" />
    <result column="provincial_recommend" jdbcType="VARCHAR" property="provincialRecommend" />
    <result column="provincial_opinion" jdbcType="VARCHAR" property="provincialOpinion" />
    <result column="school_opinion" jdbcType="VARCHAR" property="schoolOpinion" />
    <result column="triplea_opinion" jdbcType="VARCHAR" property="tripleaOpinion" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, manager_id, national_opinion, provincial_recommend, provincial_opinion, school_opinion, 
    triplea_opinion
  </sql>
  <select id="selectByExample" parameterType="org.obsidian.ceimp.entity.ScholarshipOpinionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from scholarship_opinion
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="org.obsidian.ceimp.entity.ScholarshipOpinionExample">
    delete from scholarship_opinion
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.obsidian.ceimp.entity.ScholarshipOpinion">
    insert into scholarship_opinion (id, manager_id, national_opinion, 
      provincial_recommend, provincial_opinion, 
      school_opinion, triplea_opinion)
    values (#{id,jdbcType=INTEGER}, #{managerId,jdbcType=VARCHAR}, #{nationalOpinion,jdbcType=VARCHAR}, 
      #{provincialRecommend,jdbcType=VARCHAR}, #{provincialOpinion,jdbcType=VARCHAR}, 
      #{schoolOpinion,jdbcType=VARCHAR}, #{tripleaOpinion,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.obsidian.ceimp.entity.ScholarshipOpinion">
    insert into scholarship_opinion
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="managerId != null">
        manager_id,
      </if>
      <if test="nationalOpinion != null">
        national_opinion,
      </if>
      <if test="provincialRecommend != null">
        provincial_recommend,
      </if>
      <if test="provincialOpinion != null">
        provincial_opinion,
      </if>
      <if test="schoolOpinion != null">
        school_opinion,
      </if>
      <if test="tripleaOpinion != null">
        triplea_opinion,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="managerId != null">
        #{managerId,jdbcType=VARCHAR},
      </if>
      <if test="nationalOpinion != null">
        #{nationalOpinion,jdbcType=VARCHAR},
      </if>
      <if test="provincialRecommend != null">
        #{provincialRecommend,jdbcType=VARCHAR},
      </if>
      <if test="provincialOpinion != null">
        #{provincialOpinion,jdbcType=VARCHAR},
      </if>
      <if test="schoolOpinion != null">
        #{schoolOpinion,jdbcType=VARCHAR},
      </if>
      <if test="tripleaOpinion != null">
        #{tripleaOpinion,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.obsidian.ceimp.entity.ScholarshipOpinionExample" resultType="java.lang.Long">
    select count(*) from scholarship_opinion
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update scholarship_opinion
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.managerId != null">
        manager_id = #{record.managerId,jdbcType=VARCHAR},
      </if>
      <if test="record.nationalOpinion != null">
        national_opinion = #{record.nationalOpinion,jdbcType=VARCHAR},
      </if>
      <if test="record.provincialRecommend != null">
        provincial_recommend = #{record.provincialRecommend,jdbcType=VARCHAR},
      </if>
      <if test="record.provincialOpinion != null">
        provincial_opinion = #{record.provincialOpinion,jdbcType=VARCHAR},
      </if>
      <if test="record.schoolOpinion != null">
        school_opinion = #{record.schoolOpinion,jdbcType=VARCHAR},
      </if>
      <if test="record.tripleaOpinion != null">
        triplea_opinion = #{record.tripleaOpinion,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update scholarship_opinion
    set id = #{record.id,jdbcType=INTEGER},
      manager_id = #{record.managerId,jdbcType=VARCHAR},
      national_opinion = #{record.nationalOpinion,jdbcType=VARCHAR},
      provincial_recommend = #{record.provincialRecommend,jdbcType=VARCHAR},
      provincial_opinion = #{record.provincialOpinion,jdbcType=VARCHAR},
      school_opinion = #{record.schoolOpinion,jdbcType=VARCHAR},
      triplea_opinion = #{record.tripleaOpinion,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>