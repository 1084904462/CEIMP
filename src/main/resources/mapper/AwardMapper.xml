<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.obsidian.ceimp.dao.AwardMapper">
  <resultMap id="BaseResultMap" type="org.obsidian.ceimp.entity.Award">
    <id column="award_id" jdbcType="BIGINT" property="awardId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="scholarship_id" jdbcType="BIGINT" property="scholarshipId" />
    <result column="is_filled" jdbcType="INTEGER" property="isFilled" />
    <result column="year_scope" jdbcType="INTEGER" property="yearScope" />
  </resultMap>
  <insert id="insertExcelScholarshipBeanList" parameterType="map">
    insert into award(user_id,scholarship_id,is_filled,year_scope)
    <foreach collection ="list" item="bean" index= "index" separator ="union">
      select user_basic.user_id,scholarship.scholarship_id scholarship_id,
      0 is_filled,#{yearScope} year_scope from user_basic,scholarship
      where user_basic.account = #{bean.account} and scholarship.name = #{bean.scholarship}
    </foreach>;
  </insert>
  <select id="getExcelScholarshipBeanList" parameterType="java.lang.Integer" resultType="org.obsidian.ceimp.bean.ExcelScholarshipBean">
    select user_basic.account account,scholarship.name scholarship from user_basic,award,scholarship
    where user_basic.user_id = award.user_id and award.scholarship_id = scholarship.scholarship_id and
    award.year_scope = #{yearScope};
  </select>
  <update id="cancelIsFilled" parameterType="map">
    update user_basic,award,scholarship set award.is_filled = 0 where award.user_id = user_basic.user_id and
    award.year_scope = #{yearScope} and award.scholarship_id = scholarship.scholarship_id and
    scholarship.sub_name = #{subName} and user_basic.account in
    <foreach collection="list" index="index" item="bean" open="(" separator="," close=")">
      #{bean.account}
    </foreach>
  </update>
  <update id="updateIsFilled" parameterType="map">
    update award,scholarship set award.is_filled = 1 where award.user_id = #{userId} and
    award.year_scope = #{yearScope} and award.scholarship_id = scholarship.scholarship_id
    and scholarship.sub_name = #{subName}
  </update>
  <select id="exist" parameterType="map" resultType="java.lang.Boolean">
    select exists(select true from award,scholarship where award.user_id = #{userId} and
    award.scholarship_id = scholarship.scholarship_id and scholarship.sub_name = #{subName} and
    award.year_scope = #{yearScope}) exist
  </select>
  <select id="getList" parameterType="map" resultType="org.obsidian.ceimp.bean.AwardBean">
    select scholarship.name awardName,scholarship.sub_name subName,IFNULL(award.is_filled,-1) isFilled,
    IFNULL(award.user_id,0) userId from scholarship left join award on scholarship.scholarship_id =
    award.scholarship_id and award.user_id = #{userId} and award.year_scope = #{yearScope}
  </select>
  <select id="getAll" parameterType="map" resultType="org.obsidian.ceimp.bean.ScholarshipFormBean" statementType="STATEMENT">
    select major.name major,class_num.num classNum,user_basic.account account,user_basic.username username,
    scholarship.name scholarshipName from award,major,class_num,user_basic,user_info,scholarship where
    major.school_id = ${schoolId} and major.major_id = class_num.major_id and
    class_num.class_num_id = user_info.class_num_id and user_info.year_scope = ${yearScope} and
    award.year_scope = user_info.year_scope and user_info.user_id = user_basic.user_id and
    award.user_id = user_basic.user_id and award.scholarship_id = scholarship.scholarship_id and
    scholarship.sub_name = "${subName}" and major.grade = "${grade}" and user_basic.user_id in
    (select ${subName}.user_id from ${subName} where year_scope = ${yearScope})
  </select>
  <select id="get" parameterType="map" resultMap="BaseResultMap">
    select award.* from award,scholarship
    where award.user_id = #{userId}
    and award.year_scope = #{yearScope}
    and scholarship.sub_name = #{subName}
    and scholarship.scholarship_id = award.scholarship_id
  </select>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    award_id, user_id, scholarship_id, is_filled, year_scope
  </sql>
  <select id="selectByExample" parameterType="org.obsidian.ceimp.entity.AwardExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from award
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from award
    where award_id = #{awardId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from award
    where award_id = #{awardId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="org.obsidian.ceimp.entity.AwardExample">
    delete from award
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.obsidian.ceimp.entity.Award">
    insert into award (award_id, user_id, scholarship_id, 
      is_filled, year_scope)
    values (#{awardId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{scholarshipId,jdbcType=BIGINT}, 
      #{isFilled,jdbcType=INTEGER}, #{yearScope,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="org.obsidian.ceimp.entity.Award">
    insert into award
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="awardId != null">
        award_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="scholarshipId != null">
        scholarship_id,
      </if>
      <if test="isFilled != null">
        is_filled,
      </if>
      <if test="yearScope != null">
        year_scope,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="awardId != null">
        #{awardId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="scholarshipId != null">
        #{scholarshipId,jdbcType=BIGINT},
      </if>
      <if test="isFilled != null">
        #{isFilled,jdbcType=INTEGER},
      </if>
      <if test="yearScope != null">
        #{yearScope,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.obsidian.ceimp.entity.AwardExample" resultType="java.lang.Long">
    select count(*) from award
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update award
    <set>
      <if test="record.awardId != null">
        award_id = #{record.awardId,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.scholarshipId != null">
        scholarship_id = #{record.scholarshipId,jdbcType=BIGINT},
      </if>
      <if test="record.isFilled != null">
        is_filled = #{record.isFilled,jdbcType=INTEGER},
      </if>
      <if test="record.yearScope != null">
        year_scope = #{record.yearScope,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update award
    set award_id = #{record.awardId,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      scholarship_id = #{record.scholarshipId,jdbcType=BIGINT},
      is_filled = #{record.isFilled,jdbcType=INTEGER},
      year_scope = #{record.yearScope,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.obsidian.ceimp.entity.Award">
    update award
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="scholarshipId != null">
        scholarship_id = #{scholarshipId,jdbcType=BIGINT},
      </if>
      <if test="isFilled != null">
        is_filled = #{isFilled,jdbcType=INTEGER},
      </if>
      <if test="yearScope != null">
        year_scope = #{yearScope,jdbcType=INTEGER},
      </if>
    </set>
    where award_id = #{awardId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.obsidian.ceimp.entity.Award">
    update award
    set user_id = #{userId,jdbcType=BIGINT},
      scholarship_id = #{scholarshipId,jdbcType=BIGINT},
      is_filled = #{isFilled,jdbcType=INTEGER},
      year_scope = #{yearScope,jdbcType=INTEGER}
    where award_id = #{awardId,jdbcType=BIGINT}
  </update>
</mapper>