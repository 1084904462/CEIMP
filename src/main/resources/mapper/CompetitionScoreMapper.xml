<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.obsidian.ceimp.dao.CompetitionScoreMapper">
  <resultMap id="BaseResultMap" type="org.obsidian.ceimp.entity.CompetitionScore">
    <result column="score_id" jdbcType="INTEGER" property="scoreId" />
    <result column="competition_level_id" jdbcType="INTEGER" property="competitionLevelId" />
    <result column="award_level_id" jdbcType="INTEGER" property="awardLevelId" />
    <result column="competition_type_id" jdbcType="INTEGER" property="competitionTypeId" />
    <result column="score" jdbcType="DOUBLE" property="score" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    score_id, competition_level_id, award_level_id, competition_type_id, score, type, 
    create_time
  </sql>
  <select id="selectByExample" parameterType="org.obsidian.ceimp.entity.CompetitionScoreExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from competition_score
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="org.obsidian.ceimp.entity.CompetitionScoreExample">
    delete from competition_score
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.obsidian.ceimp.entity.CompetitionScore">
    insert into competition_score (score_id, competition_level_id, award_level_id, 
      competition_type_id, score, type, 
      create_time)
    values (#{scoreId,jdbcType=INTEGER}, #{competitionLevelId,jdbcType=INTEGER}, #{awardLevelId,jdbcType=INTEGER}, 
      #{competitionTypeId,jdbcType=INTEGER}, #{score,jdbcType=DOUBLE}, #{type,jdbcType=INTEGER}, 
      #{createTime,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="org.obsidian.ceimp.entity.CompetitionScore">
    insert into competition_score
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="scoreId != null">
        score_id,
      </if>
      <if test="competitionLevelId != null">
        competition_level_id,
      </if>
      <if test="awardLevelId != null">
        award_level_id,
      </if>
      <if test="competitionTypeId != null">
        competition_type_id,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="scoreId != null">
        #{scoreId,jdbcType=INTEGER},
      </if>
      <if test="competitionLevelId != null">
        #{competitionLevelId,jdbcType=INTEGER},
      </if>
      <if test="awardLevelId != null">
        #{awardLevelId,jdbcType=INTEGER},
      </if>
      <if test="competitionTypeId != null">
        #{competitionTypeId,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        #{score,jdbcType=DOUBLE},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.obsidian.ceimp.entity.CompetitionScoreExample" resultType="java.lang.Long">
    select count(*) from competition_score
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update competition_score
    <set>
      <if test="record.scoreId != null">
        score_id = #{record.scoreId,jdbcType=INTEGER},
      </if>
      <if test="record.competitionLevelId != null">
        competition_level_id = #{record.competitionLevelId,jdbcType=INTEGER},
      </if>
      <if test="record.awardLevelId != null">
        award_level_id = #{record.awardLevelId,jdbcType=INTEGER},
      </if>
      <if test="record.competitionTypeId != null">
        competition_type_id = #{record.competitionTypeId,jdbcType=INTEGER},
      </if>
      <if test="record.score != null">
        score = #{record.score,jdbcType=DOUBLE},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update competition_score
    set score_id = #{record.scoreId,jdbcType=INTEGER},
      competition_level_id = #{record.competitionLevelId,jdbcType=INTEGER},
      award_level_id = #{record.awardLevelId,jdbcType=INTEGER},
      competition_type_id = #{record.competitionTypeId,jdbcType=INTEGER},
      score = #{record.score,jdbcType=DOUBLE},
      type = #{record.type,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>