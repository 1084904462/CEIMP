<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.obsidian.ceimp.dao.UserssMapper">
  <resultMap id="BaseResultMap" type="org.obsidian.ceimp.entity.Userss">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="major" jdbcType="VARCHAR" property="major" />
    <result column="class_id" jdbcType="VARCHAR" property="classId" />
    <result column="major_sum" jdbcType="VARCHAR" property="majorSum" />
    <result column="character" jdbcType="VARCHAR" property="character" />
    <result column="study" jdbcType="VARCHAR" property="study" />
    <result column="ability" jdbcType="VARCHAR" property="ability" />
    <result column="all" jdbcType="VARCHAR" property="all" />
    <result column="gp" jdbcType="VARCHAR" property="gp" />
    <result column="ce" jdbcType="VARCHAR" property="ce" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="birth" jdbcType="VARCHAR" property="birth" />
    <result column="nation" jdbcType="VARCHAR" property="nation" />
    <result column="entrance" jdbcType="VARCHAR" property="entrance" />
    <result column="political" jdbcType="VARCHAR" property="political" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="identity" jdbcType="VARCHAR" property="identity" />
    <result column="pass_sum" jdbcType="VARCHAR" property="passSum" />
    <result column="sub_sum" jdbcType="VARCHAR" property="subSum" />
    <result column="job" jdbcType="VARCHAR" property="job" />
  </resultMap>
  <select id="selectAllUserId" resultType="java.lang.String">
    select user_id from userss
  </select>
  <select id="selectByUserId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select userss.* from userss where user_id = #{userId}
  </select>
  <update id="updatePassword" parameterType="map">
    update userss set password = #{password} where user_id = #{userId}
  </update>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, password, username, major, class_id, major_sum, character, study, ability, 
    all, gp, ce, sex, birth, nation, entrance, political, phone, identity, pass_sum, 
    sub_sum, job
  </sql>
  <select id="selectByExample" parameterType="org.obsidian.ceimp.entity.UserssExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from userss
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="org.obsidian.ceimp.entity.UserssExample">
    delete from userss
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.obsidian.ceimp.entity.Userss">
    insert into userss (id, user_id, password, 
      username, major, class_id, 
      major_sum, character, study, 
      ability, all, gp, ce, 
      sex, birth, nation, 
      entrance, political, phone, 
      identity, pass_sum, sub_sum, 
      job)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{major,jdbcType=VARCHAR}, #{classId,jdbcType=VARCHAR}, 
      #{majorSum,jdbcType=VARCHAR}, #{character,jdbcType=VARCHAR}, #{study,jdbcType=VARCHAR}, 
      #{ability,jdbcType=VARCHAR}, #{all,jdbcType=VARCHAR}, #{gp,jdbcType=VARCHAR}, #{ce,jdbcType=VARCHAR}, 
      #{sex,jdbcType=VARCHAR}, #{birth,jdbcType=VARCHAR}, #{nation,jdbcType=VARCHAR}, 
      #{entrance,jdbcType=VARCHAR}, #{political,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{identity,jdbcType=VARCHAR}, #{passSum,jdbcType=VARCHAR}, #{subSum,jdbcType=VARCHAR}, 
      #{job,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.obsidian.ceimp.entity.Userss">
    insert into userss
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="major != null">
        major,
      </if>
      <if test="classId != null">
        class_id,
      </if>
      <if test="majorSum != null">
        major_sum,
      </if>
      <if test="character != null">
        character,
      </if>
      <if test="study != null">
        study,
      </if>
      <if test="ability != null">
        ability,
      </if>
      <if test="all != null">
        all,
      </if>
      <if test="gp != null">
        gp,
      </if>
      <if test="ce != null">
        ce,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="birth != null">
        birth,
      </if>
      <if test="nation != null">
        nation,
      </if>
      <if test="entrance != null">
        entrance,
      </if>
      <if test="political != null">
        political,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="identity != null">
        identity,
      </if>
      <if test="passSum != null">
        pass_sum,
      </if>
      <if test="subSum != null">
        sub_sum,
      </if>
      <if test="job != null">
        job,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="major != null">
        #{major,jdbcType=VARCHAR},
      </if>
      <if test="classId != null">
        #{classId,jdbcType=VARCHAR},
      </if>
      <if test="majorSum != null">
        #{majorSum,jdbcType=VARCHAR},
      </if>
      <if test="character != null">
        #{character,jdbcType=VARCHAR},
      </if>
      <if test="study != null">
        #{study,jdbcType=VARCHAR},
      </if>
      <if test="ability != null">
        #{ability,jdbcType=VARCHAR},
      </if>
      <if test="all != null">
        #{all,jdbcType=VARCHAR},
      </if>
      <if test="gp != null">
        #{gp,jdbcType=VARCHAR},
      </if>
      <if test="ce != null">
        #{ce,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birth != null">
        #{birth,jdbcType=VARCHAR},
      </if>
      <if test="nation != null">
        #{nation,jdbcType=VARCHAR},
      </if>
      <if test="entrance != null">
        #{entrance,jdbcType=VARCHAR},
      </if>
      <if test="political != null">
        #{political,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="identity != null">
        #{identity,jdbcType=VARCHAR},
      </if>
      <if test="passSum != null">
        #{passSum,jdbcType=VARCHAR},
      </if>
      <if test="subSum != null">
        #{subSum,jdbcType=VARCHAR},
      </if>
      <if test="job != null">
        #{job,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.obsidian.ceimp.entity.UserssExample" resultType="java.lang.Long">
    select count(*) from userss
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update userss
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.major != null">
        major = #{record.major,jdbcType=VARCHAR},
      </if>
      <if test="record.classId != null">
        class_id = #{record.classId,jdbcType=VARCHAR},
      </if>
      <if test="record.majorSum != null">
        major_sum = #{record.majorSum,jdbcType=VARCHAR},
      </if>
      <if test="record.character != null">
        character = #{record.character,jdbcType=VARCHAR},
      </if>
      <if test="record.study != null">
        study = #{record.study,jdbcType=VARCHAR},
      </if>
      <if test="record.ability != null">
        ability = #{record.ability,jdbcType=VARCHAR},
      </if>
      <if test="record.all != null">
        all = #{record.all,jdbcType=VARCHAR},
      </if>
      <if test="record.gp != null">
        gp = #{record.gp,jdbcType=VARCHAR},
      </if>
      <if test="record.ce != null">
        ce = #{record.ce,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.birth != null">
        birth = #{record.birth,jdbcType=VARCHAR},
      </if>
      <if test="record.nation != null">
        nation = #{record.nation,jdbcType=VARCHAR},
      </if>
      <if test="record.entrance != null">
        entrance = #{record.entrance,jdbcType=VARCHAR},
      </if>
      <if test="record.political != null">
        political = #{record.political,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.identity != null">
        identity = #{record.identity,jdbcType=VARCHAR},
      </if>
      <if test="record.passSum != null">
        pass_sum = #{record.passSum,jdbcType=VARCHAR},
      </if>
      <if test="record.subSum != null">
        sub_sum = #{record.subSum,jdbcType=VARCHAR},
      </if>
      <if test="record.job != null">
        job = #{record.job,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update userss
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      major = #{record.major,jdbcType=VARCHAR},
      class_id = #{record.classId,jdbcType=VARCHAR},
      major_sum = #{record.majorSum,jdbcType=VARCHAR},
      character = #{record.character,jdbcType=VARCHAR},
      study = #{record.study,jdbcType=VARCHAR},
      ability = #{record.ability,jdbcType=VARCHAR},
      all = #{record.all,jdbcType=VARCHAR},
      gp = #{record.gp,jdbcType=VARCHAR},
      ce = #{record.ce,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      birth = #{record.birth,jdbcType=VARCHAR},
      nation = #{record.nation,jdbcType=VARCHAR},
      entrance = #{record.entrance,jdbcType=VARCHAR},
      political = #{record.political,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      identity = #{record.identity,jdbcType=VARCHAR},
      pass_sum = #{record.passSum,jdbcType=VARCHAR},
      sub_sum = #{record.subSum,jdbcType=VARCHAR},
      job = #{record.job,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>