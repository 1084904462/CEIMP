<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.obsidian.ceimp.dao.BasicInputMapper">
  <resultMap id="BaseResultMap" type="org.obsidian.ceimp.entity.BasicInput">
    <result column="input_id" jdbcType="INTEGER" property="inputId" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="point_id" jdbcType="INTEGER" property="pointId" />
    <result column="evidence" jdbcType="VARCHAR" property="evidence" />
    <result column="times" jdbcType="INTEGER" property="times" />
    <result column="subjective_score" jdbcType="DOUBLE" property="subjectiveScore" />
    <result column="addition" jdbcType="VARCHAR" property="addition" />
    <result column="year_scope" jdbcType="INTEGER" property="yearScope" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    input_id, user_id, point_id, evidence, times, subjective_score, addition, year_scope, 
    create_time
  </sql>
  <select id="selectByExample" parameterType="org.obsidian.ceimp.entity.BasicInputExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from basic_input
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="org.obsidian.ceimp.entity.BasicInputExample">
    delete from basic_input
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.obsidian.ceimp.entity.BasicInput">
    insert into basic_input (input_id, user_id, point_id, 
      evidence, times, subjective_score, 
      addition, year_scope, create_time
      )
    values (#{inputId,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, #{pointId,jdbcType=INTEGER}, 
      #{evidence,jdbcType=VARCHAR}, #{times,jdbcType=INTEGER}, #{subjectiveScore,jdbcType=DOUBLE}, 
      #{addition,jdbcType=VARCHAR}, #{yearScope,jdbcType=INTEGER}, #{createTime,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.obsidian.ceimp.entity.BasicInput">
    insert into basic_input
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="inputId != null">
        input_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="pointId != null">
        point_id,
      </if>
      <if test="evidence != null">
        evidence,
      </if>
      <if test="times != null">
        times,
      </if>
      <if test="subjectiveScore != null">
        subjective_score,
      </if>
      <if test="addition != null">
        addition,
      </if>
      <if test="yearScope != null">
        year_scope,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="inputId != null">
        #{inputId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="pointId != null">
        #{pointId,jdbcType=INTEGER},
      </if>
      <if test="evidence != null">
        #{evidence,jdbcType=VARCHAR},
      </if>
      <if test="times != null">
        #{times,jdbcType=INTEGER},
      </if>
      <if test="subjectiveScore != null">
        #{subjectiveScore,jdbcType=DOUBLE},
      </if>
      <if test="addition != null">
        #{addition,jdbcType=VARCHAR},
      </if>
      <if test="yearScope != null">
        #{yearScope,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.obsidian.ceimp.entity.BasicInputExample" resultType="java.lang.Long">
    select count(*) from basic_input
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update basic_input
    <set>
      <if test="record.inputId != null">
        input_id = #{record.inputId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.pointId != null">
        point_id = #{record.pointId,jdbcType=INTEGER},
      </if>
      <if test="record.evidence != null">
        evidence = #{record.evidence,jdbcType=VARCHAR},
      </if>
      <if test="record.times != null">
        times = #{record.times,jdbcType=INTEGER},
      </if>
      <if test="record.subjectiveScore != null">
        subjective_score = #{record.subjectiveScore,jdbcType=DOUBLE},
      </if>
      <if test="record.addition != null">
        addition = #{record.addition,jdbcType=VARCHAR},
      </if>
      <if test="record.yearScope != null">
        year_scope = #{record.yearScope,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update basic_input
    set input_id = #{record.inputId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=VARCHAR},
      point_id = #{record.pointId,jdbcType=INTEGER},
      evidence = #{record.evidence,jdbcType=VARCHAR},
      times = #{record.times,jdbcType=INTEGER},
      subjective_score = #{record.subjectiveScore,jdbcType=DOUBLE},
      addition = #{record.addition,jdbcType=VARCHAR},
      year_scope = #{record.yearScope,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>