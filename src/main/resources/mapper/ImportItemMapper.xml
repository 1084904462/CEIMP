<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.obsidian.ceimp.dao.ImportItemMapper">
  <resultMap id="BaseResultMap" type="org.obsidian.ceimp.entity.ImportItem">
    <result column="import_id" jdbcType="INTEGER" property="importId" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="exam_fail" jdbcType="INTEGER" property="examFail" />
    <result column="make_up" jdbcType="INTEGER" property="makeUp" />
    <result column="cet4" jdbcType="INTEGER" property="cet4" />
    <result column="pe" jdbcType="DOUBLE" property="pe" />
    <result column="gpa" jdbcType="DOUBLE" property="gpa" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    import_id, user_id, exam_fail, make_up, cet4, pe, gpa, create_time
  </sql>
  <select id="selectByExample" parameterType="org.obsidian.ceimp.entity.ImportItemExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from import_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="org.obsidian.ceimp.entity.ImportItemExample">
    delete from import_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.obsidian.ceimp.entity.ImportItem">
    insert into import_item (import_id, user_id, exam_fail, 
      make_up, cet4, pe, gpa, 
      create_time)
    values (#{importId,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, #{examFail,jdbcType=INTEGER}, 
      #{makeUp,jdbcType=INTEGER}, #{cet4,jdbcType=INTEGER}, #{pe,jdbcType=DOUBLE}, #{gpa,jdbcType=DOUBLE}, 
      #{createTime,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="org.obsidian.ceimp.entity.ImportItem">
    insert into import_item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="importId != null">
        import_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="examFail != null">
        exam_fail,
      </if>
      <if test="makeUp != null">
        make_up,
      </if>
      <if test="cet4 != null">
        cet4,
      </if>
      <if test="pe != null">
        pe,
      </if>
      <if test="gpa != null">
        gpa,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="importId != null">
        #{importId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="examFail != null">
        #{examFail,jdbcType=INTEGER},
      </if>
      <if test="makeUp != null">
        #{makeUp,jdbcType=INTEGER},
      </if>
      <if test="cet4 != null">
        #{cet4,jdbcType=INTEGER},
      </if>
      <if test="pe != null">
        #{pe,jdbcType=DOUBLE},
      </if>
      <if test="gpa != null">
        #{gpa,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.obsidian.ceimp.entity.ImportItemExample" resultType="java.lang.Long">
    select count(*) from import_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update import_item
    <set>
      <if test="record.importId != null">
        import_id = #{record.importId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.examFail != null">
        exam_fail = #{record.examFail,jdbcType=INTEGER},
      </if>
      <if test="record.makeUp != null">
        make_up = #{record.makeUp,jdbcType=INTEGER},
      </if>
      <if test="record.cet4 != null">
        cet4 = #{record.cet4,jdbcType=INTEGER},
      </if>
      <if test="record.pe != null">
        pe = #{record.pe,jdbcType=DOUBLE},
      </if>
      <if test="record.gpa != null">
        gpa = #{record.gpa,jdbcType=DOUBLE},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update import_item
    set import_id = #{record.importId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=VARCHAR},
      exam_fail = #{record.examFail,jdbcType=INTEGER},
      make_up = #{record.makeUp,jdbcType=INTEGER},
      cet4 = #{record.cet4,jdbcType=INTEGER},
      pe = #{record.pe,jdbcType=DOUBLE},
      gpa = #{record.gpa,jdbcType=DOUBLE},
      create_time = #{record.createTime,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>